[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "abov3"
version = "1.0.0"
description = "Advanced Interactive AI Coding Assistant for Ollama"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ABOV3 Team", email = "contact@abov3.dev"}
]
maintainers = [
    {name = "ABOV3 Team", email = "contact@abov3.dev"}
]
keywords = [
    "ai", "coding", "assistant", "ollama", "cli", "interactive", 
    "code-generation", "debugging", "refactoring"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Utilities"
]
requires-python = ">=3.8"
dependencies = [
    "ollama>=0.3.0",
    "rich>=13.0.0",
    "prompt-toolkit>=3.0.36",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "pygments>=2.10.0",
    "toml>=0.10.2",
    "gitpython>=3.1.30",
    "watchdog>=3.0.0",
    "python-dotenv>=1.0.0",
    "colorama>=0.4.6",
    "packaging>=21.0",
    "aiosqlite>=0.17.0",
    "numpy>=1.21.0",
    "pyyaml>=6.0.0",
    "psutil>=5.9.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0", 
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0"
]

[project.urls]
Homepage = "https://github.com/abov3/abov3-ollama"
Documentation = "https://abov3-ollama.readthedocs.io"
Repository = "https://github.com/abov3/abov3-ollama.git"
"Bug Tracker" = "https://github.com/abov3/abov3-ollama/issues"
Changelog = "https://github.com/abov3/abov3-ollama/blob/main/CHANGELOG.md"

[project.scripts]
abov3 = "abov3.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["abov3*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
abov3 = ["*.json", "*.yaml", "*.yml", "*.toml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--tb=short",
    "--cov=abov3",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["abov3"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]